buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$springboot_version")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
		classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
		classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlin_version")
	}
}

plugins {
	id "org.springframework.boot" version "2.2.2.RELEASE"
	id "io.spring.dependency-management" version "1.0.8.RELEASE"
	id "org.jetbrains.kotlin.jvm" version "1.3.61"
	id "org.jetbrains.kotlin.plugin.spring" version "1.3.61"
	id "org.jetbrains.kotlin.plugin.jpa" version "1.3.61"
	id "java"
	id "idea"
}

bootRun {
	jvmArgs = ["--add-opens=java.base/java.net=ALL-UNNAMED",
			   "--add-opens=java.base/java.lang=ALL-UNNAMED"]
}

test {
	jvmArgs = ["--add-opens=java.base/java.net=ALL-UNNAMED",
			   "--add-opens=java.base/java.lang=ALL-UNNAMED"]
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = "1.8"
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = "1.8"
	}
}

group = "net.littlelite"
sourceCompatibility = 1.12

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springboot_version"
	implementation "org.springframework.boot:spring-boot-starter-web:$springboot_version"
	implementation("org.springframework.boot:spring-boot-starter-freemarker:$springboot_version")
	implementation("org.springframework.boot:spring-boot-starter-hateoas:$springboot_version")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
	implementation("org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE")
	implementation("io.springfox:springfox-swagger2:$swagger_version")
	implementation("io.springfox:springfox-swagger-ui:$swagger_version")
	runtimeOnly("com.h2database:h2:$h2_version")
	implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
	testImplementation("org.springframework.boot:spring-boot-starter-test:$springboot_version") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
}

test {
	useJUnitPlatform()
}
